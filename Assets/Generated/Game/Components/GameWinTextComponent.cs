//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WinTextComponent winText { get { return (WinTextComponent)GetComponent(GameComponentsLookup.WinText); } }
    public bool hasWinText { get { return HasComponent(GameComponentsLookup.WinText); } }

    public void AddWinText(TMPro.TextMeshProUGUI newTextMesh) {
        var index = GameComponentsLookup.WinText;
        var component = (WinTextComponent)CreateComponent(index, typeof(WinTextComponent));
        component.textMesh = newTextMesh;
        AddComponent(index, component);
    }

    public void ReplaceWinText(TMPro.TextMeshProUGUI newTextMesh) {
        var index = GameComponentsLookup.WinText;
        var component = (WinTextComponent)CreateComponent(index, typeof(WinTextComponent));
        component.textMesh = newTextMesh;
        ReplaceComponent(index, component);
    }

    public void RemoveWinText() {
        RemoveComponent(GameComponentsLookup.WinText);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWinText;

    public static Entitas.IMatcher<GameEntity> WinText {
        get {
            if (_matcherWinText == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WinText);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWinText = matcher;
            }

            return _matcherWinText;
        }
    }
}
